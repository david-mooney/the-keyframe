/* TODO: this file is getting a bit long, consider splitting it up */

.card {
  width: 100%;
  padding: var(--spacing-6);
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background-color: var(--color-background);
  border: 1px solid hsla(var(--color-text-raw) / 25%);
  border-radius: var(--border-radius-1);
  box-shadow: var(--box-shadow-1);
  overflow: hidden;
}

.link {
  display: flex;
  height: 100%;
  text-decoration: none;
  box-shadow: none;
  outline-color: transparent;
  outline-style: solid;
  transition: var(--timing-fast) box-shadow var(--ease-in-out);
}

.link:hover .card,
.link:focus-visible .card,
.link:focus-within .card {
  border-color: var(--color-text);
}

.form {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.form h3 {
  margin: 0 0 var(--spacing-6) 0;
}

.inputs {
  width: 75%;
  display: flex;
  flex-direction: column;
  align-items: baseline;
  opacity: 1;
  gap: var(--spacing-6);
  padding: var(--spacing-3) 0;
  transition: var(--timing-fast) opacity var(--ease-in-out);
}

@media screen and (min-width: 800px) {
  .inputs {
    flex-direction: row;
  }
}

.form[data-state='loading'] .inputs,
.form[data-state='success'] .inputs,
.form[data-state='error'] .inputs {
  opacity: 0;
  pointer-events: none;
}

.footer {
  margin-top: var(--spacing-6);
}

.footer,
.form h3 {
  transition: var(--timing-fast) transform var(--ease-in-out),
    var(--timing-fast) opacity var(--ease-in);
}

.form[data-state='loading'] h3,
.form[data-state='success'] h3,
.form[data-state='error'] h3 {
  transform: translateY(-200%);
  opacity: 0;
}

.form[data-state='loading'] .footer,
.form[data-state='success'] .footer,
.form[data-state='error'] .footer {
  transform: translateY(300%);
  opacity: 0;
}

.input {
  width: 100%;
  padding: var(--spacing-3);
  padding-right: var(--spacing-7);
  background-color: transparent;
  border: none;
  outline: none;
  color: var(--color-text);
  border-bottom: 2px solid hsla(var(--color-text-raw) / 25%);
  -webkit-appearance: none;
  -webkit-border-radius: 0;
}

.input::placeholder {
  color: hsla(var(--color-text-raw) / 50%);
}

.input:hover,
.input:focus {
  border-color: var(--color-text);
}

.input:-webkit-autofill,
.input:-webkit-autofill:focus {
  -webkit-text-fill-color: var(--color-text);
  -webkit-box-shadow: 0 0 0 1000px var(--color-background) inset;
  transition: var(--timing-fast) -webkit-box-shadow var(--ease-out);
}

.button {
  width: 100%;
  color: var(--color-background);
  background-color: var(--color-text);
  padding: var(--spacing-4) var(--spacing-6);
  margin: 0;
  font-weight: var(--font-weight-bold);
  border-radius: var(--border-radius-0);
  border: none;
  cursor: pointer;
}

@media screen and (min-width: 800px) {
  .button {
    width: auto;
  }
}

.honeyPot {
  display: none;
}

.center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  white-space: pre-wrap;
}

.appear {
  opacity: 0;
  animation: var(--timing-fast) appear var(--ease-in-out) forwards;
  animation-delay: var(--timing-fast);
}

.icon {
  position: absolute;
  right: var(--spacing-3);
  display: flex;
  color: hsla(var(--color-text-raw) / 50%);
  pointer-events: none;
}

.input:focus + .icon {
  color: hsla(var(--color-text-raw) / 100%);
}

.container {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

@keyframes appear {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
